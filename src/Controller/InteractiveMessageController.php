<?php
declare(strict_types=1);

/**
 * CakePHP(tm) : Rapid Development Framework (https://cakephp.org)
 * Copyright (c) Cake Software Foundation, Inc. (https://cakefoundation.org)
 *
 * Licensed under The MIT License
 * For full copyright and license information, please see the LICENSE.txt
 * Redistributions of files must retain the above copyright notice.
 *
 * @copyright Copyright (c) Cake Software Foundation, Inc. (https://cakefoundation.org)
 * @link      https://cakephp.org CakePHP(tm) Project
 * @since     0.2.9
 * @license   https://opensource.org/licenses/mit-license.php MIT License
 */
namespace App\Controller;

use App\Model\Domain\Slack\Client\SlackClient;
use App\Model\Domain\Slack\InteractiveMessage\Dialog;
use App\Model\Table\AtsumarisTable;
use App\Service\DialogSubmissionService;
use App\Service\InteractiveMessageStrategy;
use App\Service\ShortcutUsedService;
use App\Service\SlackService;
use Cake\Log\Log;

/**
 *
 */
class InteractiveMessageController extends AppController
{
    /** @var SlackService */
    private $SlackService;

    private $DialogSubmissionService;

    private $ShortcutUsedService;


    public function initialize(): void
    {
        parent::initialize(); // TODO: Change the autogenerated stub
        $this->SlackService = new SlackService();
    }

    public function index()
    {
        $this->autoRender = false;

        $payload = json_decode($this->request->getData('payload'));


        $type = $payload->type;
        $callback_id = $payload->callback_id;
        if ($type === "dialog_submission") {
            $this->DialogSubmissionService = new DialogSubmissionService($payload);
            $this->DialogSubmissionService->callback();
            return $this->response;
        }

        if ($type === "shortcut") {
            $this->ShortcutUsedService = new ShortcutUsedService($payload);
            $this->ShortcutUsedService->callback();
            return $this->response;
        }
//        Log::write('error', json_encode($res->getJson()));
    }
}
